@model Integrador.Models.Suministro

@{
    ViewData["Title"] = "Crear suministro";
}

<h1>Crear suministro</h1>

<h4>Suministro</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @if (!User.IsInRole("Proveedor"))
            {
                <div class="form-group">
                    <label asp-for="ProveedorId" class="control-label"></label>
                    <select asp-for="ProveedorId" class="form-control" asp-items="ViewBag.ProveedorId"></select>
                    <span asp-validation-for="ProveedorId" class="text-danger"></span>
                </div>
            }
            <div class="form-group">
                <label asp-for="Producto.Modelo" for="modeloSelect" class="control-label"></label>
                <select id="modeloSelect" asp-for="Producto.Modelo" name="IntModelo" class="form-control" asp-items="ViewBag.Modelos">
                    @* <option value="">Todas</option> *@
                </select>
                <span asp-validation-for="Producto.Modelo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductoId" for="productoSelect" class="control-label"></label>
                <select id="productoSelect" asp-for="ProductoId" class="form-control" asp-items="ViewBag.ProductoId"></select>
                <span id="productoSpan" asp-validation-for="ProductoId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Unidades" class="control-label"></label>
                <input asp-for="Unidades" class="form-control" value="1" min="1" />
                <span asp-validation-for="Unidades" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FechaSuministro" class="control-label"></label>
                <input asp-for="FechaSuministro" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" readonly />
                <span asp-validation-for="FechaSuministro" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input id="btnCr" type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @if (ViewData["ProductoId"] == null)
    {
        <a asp-action="Index">Volver a la lista</a>
    }
    else
    {
        <a asp-action="Index" asp-controller="Escaparate">Volver al escaparate</a>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script>

    let modeloSelect = document.getElementById("modeloSelect");
    let productoSelect = document.getElementById("productoSelect");
    let productoSpan = document.getElementById("productoSpan");
    productoSelect.value = 0;

    modeloSelect.addEventListener("change", ListaModelo);

    function ListaModelo() {
        let modeloId = modeloSelect.value;

        if (modeloId == undefined) {
            modeloId = modeloSelect.firstElementChild.value;
        }

        fetch('/Suministros/GetProductosByModelo/' + modeloId)
            .then(function (response) {
                return response.json();
            })
            .then(function (data) {
                let productoId = productoSelect.value;
                while (productoSelect.firstChild) {
                    productoSelect.firstChild.remove();
                }
                document.getElementById("btnCr").disabled = productoSelect.disabled = data.length == 0;
                productoSpan.innerText = data.length == 0 ? "Debe seleccionar un producto." : "";
                if (data.length == 0) {
                    let option = document.createElement("option");
                    option.value = -1;
                    option.text = "No hay productos de ese modelo.";
                    productoSelect.appendChild(option);
                } else {
                    data.forEach(function (producto) {
                        let option = document.createElement("option");
                        option.value = producto.id;
                        option.text = producto.nombre;
                        productoSelect.appendChild(option);
                    });
                }
            });
    }
    function urlid(texto) {
        var indiceUltimoSlash = texto.lastIndexOf("/");

        if (indiceUltimoSlash !== -1) {
            return texto.substring(indiceUltimoSlash + 1);
        } else {
            return texto;
        }
    }


    let url = window.location.href;
    if (url.endsWith("e")) {
        console.log("Ends with /")
        ListaModelo();
    } else {
        console.log("Doesnt end with /")
        fetch('/Suministros/GetModeloByProducto/' + urlid(url))
            .then(function (response) {
                return response.json();
            })
            .then(function (data) {
                modeloSelect.value = data.id;
                ListaModelo();
                productoSelect.value = urlid(url);
            });
    }

</script>